{"ast":null,"code":"import axios from 'axios';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nexport const SET_CHILD_ACTION = 'SET_CHILD_ACTION';\nexport const SET_IMMUNIZATION_ACTION = 'SET_IMMUNIZATION_ACTION';\nexport const SET_PARENT_ACTION = 'SET_PARENT_ACTION';\nexport function gatParentAction(props, credentials) {\n  let parentId = -1;\n  return function (dispatch) {\n    axiosWithAuth().post(\"/auth/login/\".concat(props.user), credentials).then(res => {\n      // console.log('RES FROM LOGIN: ', res);\n      localStorage.setItem('token', res.data.token);\n      parentId = res.data.user.id;\n      dispatch({\n        type: SET_PARENT_ACTION,\n        payload: parentId\n      });\n      setTimeout(() => props.history.push(\"/patient-home\"), 1000);\n    }).catch(err => console.log('ERROR LOGIN: ', err.message));\n  };\n}\nexport const getChildrenAction = parentId => dispatch => {\n  axiosWithAuth().get(\"/parent/\".concat(parentId, \"/children\")).then(res => {\n    dispatch({\n      type: SET_CHILD_ACTION,\n      payload: res.data\n    });\n    res.data.map((child, index) => {\n      axiosWithAuth().get(\"/child/\".concat(child.id, \"/immunization\")).then(res => {\n        dispatch({\n          type: SET_IMMUNIZATION_ACTION,\n          payload: {\n            immuneObj: res.data,\n            index: index\n          }\n        });\n      }).catch(err => console.log('ERROR IMMUNIZATION REQ: ', err.message));\n    });\n  }).catch(err => console.log('ERROR CHILD REQ: ', err.message));\n};\nexport const addChildAction = child => dispatch => {\n  axiosWithAuth().post(\"/parent/:parentid/children\");\n};","map":{"version":3,"sources":["C:\\Users\\Brandon Nichols\\Documents\\VScodeProjects\\BuildWeek-ImmunizationTracker\\Front-End\\immutrack\\src\\actions\\index.js"],"names":["axios","axiosWithAuth","SET_CHILD_ACTION","SET_IMMUNIZATION_ACTION","SET_PARENT_ACTION","gatParentAction","props","credentials","parentId","dispatch","post","user","then","res","localStorage","setItem","data","token","id","type","payload","setTimeout","history","push","catch","err","console","log","message","getChildrenAction","get","map","child","index","immuneObj","addChildAction"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAiCC,WAAjC,EAA6C;AAChD,MAAIC,QAAQ,GAAG,CAAC,CAAhB;AACA,SAAO,UAASC,QAAT,EAAkB;AAErBR,IAAAA,aAAa,GACRS,IADL,uBACyBJ,KAAK,CAACK,IAD/B,GACuCJ,WADvC,EAEKK,IAFL,CAEUC,GAAG,IAAI;AACT;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,KAAvC;AACAT,MAAAA,QAAQ,GAAGK,GAAG,CAACG,IAAJ,CAASL,IAAT,CAAcO,EAAzB;AACAT,MAAAA,QAAQ,CAAC;AAACU,QAAAA,IAAI,EAAEf,iBAAP;AAA0BgB,QAAAA,OAAO,EAAEZ;AAAnC,OAAD,CAAR;AACAa,MAAAA,UAAU,CAAC,MAAMf,KAAK,CAACgB,OAAN,CAAcC,IAAd,iBAAP,EAA4C,IAA5C,CAAV;AACH,KARL,EASKC,KATL,CASWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAAG,CAACG,OAAjC,CATlB;AAUH,GAZD;AAaH;AAED,OAAO,MAAMC,iBAAiB,GAAGrB,QAAQ,IAAIC,QAAQ,IAAI;AAChDR,EAAAA,aAAa,GACT6B,GADJ,mBACmBtB,QADnB,gBAEII,IAFJ,CAESC,GAAG,IAAI;AACTJ,IAAAA,QAAQ,CAAC;AAACU,MAAAA,IAAI,EAAEjB,gBAAP;AAAyBkB,MAAAA,OAAO,EAAEP,GAAG,CAACG;AAAtC,KAAD,CAAR;AAEAH,IAAAA,GAAG,CAACG,IAAJ,CAASe,GAAT,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3BhC,MAAAA,aAAa,GAAG6B,GAAhB,kBAA8BE,KAAK,CAACd,EAApC,oBACKN,IADL,CACUC,GAAG,IAAI;AACTJ,QAAAA,QAAQ,CAAC;AAACU,UAAAA,IAAI,EAAEhB,uBAAP;AAAgCiB,UAAAA,OAAO,EAAE;AAACc,YAAAA,SAAS,EAAErB,GAAG,CAACG,IAAhB;AAAsBiB,YAAAA,KAAK,EAAEA;AAA7B;AAAzC,SAAD,CAAR;AACH,OAHL,EAIKT,KAJL,CAIWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,GAAG,CAACG,OAA5C,CAJlB;AAKH,KAND;AAOH,GAZJ,EAaIJ,KAbJ,CAaUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAG,CAACG,OAArC,CAbjB;AAcR,CAfM;AAiBP,OAAO,MAAMO,cAAc,GAAGH,KAAK,IAAIvB,QAAQ,IAAI;AAC/CR,EAAAA,aAAa,GACRS,IADL;AAEH,CAHM","sourcesContent":["import axios from 'axios';\r\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\r\n\r\nexport const SET_CHILD_ACTION = 'SET_CHILD_ACTION';\r\nexport const SET_IMMUNIZATION_ACTION = 'SET_IMMUNIZATION_ACTION';\r\nexport const SET_PARENT_ACTION = 'SET_PARENT_ACTION';\r\n\r\nexport function gatParentAction (props, credentials){\r\n    let parentId = -1;\r\n    return function(dispatch){\r\n        \r\n        axiosWithAuth()\r\n            .post(`/auth/login/${props.user}`, credentials)\r\n            .then(res => {\r\n                // console.log('RES FROM LOGIN: ', res);\r\n                localStorage.setItem('token', res.data.token);\r\n                parentId = res.data.user.id;\r\n                dispatch({type: SET_PARENT_ACTION, payload: parentId});\r\n                setTimeout(() => props.history.push(`/patient-home`), 1000);\r\n            })\r\n            .catch(err => console.log('ERROR LOGIN: ', err.message));\r\n    }\r\n}\r\n\r\nexport const getChildrenAction = parentId => dispatch => {\r\n         axiosWithAuth()\r\n            .get(`/parent/${parentId}/children`)\r\n            .then(res => {\r\n                dispatch({type: SET_CHILD_ACTION, payload: res.data});\r\n                \r\n                res.data.map((child, index) => {\r\n                    axiosWithAuth().get(`/child/${child.id}/immunization`)\r\n                        .then(res => {\r\n                            dispatch({type: SET_IMMUNIZATION_ACTION, payload: {immuneObj: res.data, index: index}});\r\n                        })\r\n                        .catch(err => console.log('ERROR IMMUNIZATION REQ: ', err.message));\r\n                })\r\n            })\r\n            .catch(err => console.log('ERROR CHILD REQ: ', err.message));\r\n}\r\n\r\nexport const addChildAction = child => dispatch => {\r\n    axiosWithAuth()\r\n        .post(`/parent/:parentid/children`)\r\n}"]},"metadata":{},"sourceType":"module"}
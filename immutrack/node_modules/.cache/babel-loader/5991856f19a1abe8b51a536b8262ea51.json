{"ast":null,"code":"import { axiosWithAuth } from \"../utils/axiosWithAuth\";\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\nexport const register = (props, resetForm, values) => dispatch => {\n  dispatch({\n    type: REGISTER_REQUEST\n  });\n  axiosWithAuth().post(\"/auth/register/parents\", values).then(res => {\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data.message\n    });\n    props.history.push(\"/login\");\n  }).catch(err => {\n    dispatch({\n      type: REGISTER_FAILURE,\n      payload: \"\".concat(err.response.status, \" - \").concat(err.response.statusText)\n    });\n    resetForm();\n  });\n};","map":{"version":3,"sources":["C:\\Users\\Brandon Nichols\\Documents\\VScodeProjects\\BuildWeek-ImmunizationTracker\\Front-End\\immutrack\\src\\actions\\register.js"],"names":["axiosWithAuth","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","register","props","resetForm","values","dispatch","type","post","then","res","payload","data","message","history","push","catch","err","response","status","statusText"],"mappings":"AAAA,SAASA,aAAT,QAA8B,wBAA9B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,SAAR,EAAmBC,MAAnB,KAA8BC,QAAQ,IAAI;AAChEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACAD,EAAAA,aAAa,GACVU,IADH,2BACkCH,MADlC,EAEGI,IAFH,CAEQC,GAAG,IAAI;AACXJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,gBAAR;AAA0BW,MAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAASC;AAA5C,KAAD,CAAR;AACAV,IAAAA,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD,GALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,gBADC;AAEPU,MAAAA,OAAO,YAAKM,GAAG,CAACC,QAAJ,CAAaC,MAAlB,gBAA8BF,GAAG,CAACC,QAAJ,CAAaE,UAA3C;AAFA,KAAD,CAAR;AAIAhB,IAAAA,SAAS;AACV,GAZH;AAaD,CAfM","sourcesContent":["import { axiosWithAuth } from \"../utils/axiosWithAuth\";\r\n\r\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\r\n\r\nexport const register = (props, resetForm, values) => dispatch => {\r\n  dispatch({ type: REGISTER_REQUEST });\r\n  axiosWithAuth()\r\n    .post(`/auth/register/parents`, values)\r\n    .then(res => {\r\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data.message });\r\n      props.history.push(\"/login\");\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: REGISTER_FAILURE,\r\n        payload: `${err.response.status} - ${err.response.statusText}`\r\n      });\r\n      resetForm();\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
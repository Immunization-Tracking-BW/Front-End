{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Brandon Nichols\\\\Documents\\\\VScodeProjects\\\\BuildWeek-ImmunizationTracker\\\\Front-End\\\\immutrack\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_IMMUNIZATION_ACTION } from '../actions';\nimport { SET_CHILD_ACTION } from '../actions';\nimport { SET_PARENT_ACTION } from '../actions';\nconst initialState = {\n  childList: [{\n    firstName: 'Brandon',\n    immunizations: [{\n      vaccine: 'stuff'\n    }]\n  }\n  /* \r\n      {\r\n          name: [type text]\r\n          age: [type text]\r\n          social: [type text]\r\n          signUpCode: [type text] //do I need to keep this in state?\r\n          immunizations: [\r\n              {\r\n                  immunizationName: [type text]\r\n                  DateOfVaccination: [type text]\r\n                  hasShot: [type bool]\r\n              }\r\n          ]\r\n      }\r\n  */\n  ],\n  display: false,\n  parentId: -1\n};\nexport const patientReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CHILD_ACTION:\n      return {\n        childList: action.payload,\n        display: false\n      };\n\n    case SET_IMMUNIZATION_ACTION:\n      let tempArr = [...state.childList];\n      tempArr[action.payload.index].immunizations = action.payload.immuneObj || {\n        Empty: 0\n      };\n      return {\n        childList: [...tempArr],\n        display: true\n      };\n\n    case SET_PARENT_ACTION:\n      return _objectSpread({}, state, {\n        parentId: action.payload,\n        display: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:\\Users\\Brandon Nichols\\Documents\\VScodeProjects\\BuildWeek-ImmunizationTracker\\Front-End\\immutrack\\src\\reducers\\patientReducers.js"],"names":["SET_IMMUNIZATION_ACTION","SET_CHILD_ACTION","SET_PARENT_ACTION","initialState","childList","firstName","immunizations","vaccine","display","parentId","patientReducer","state","action","type","payload","tempArr","index","immuneObj","Empty"],"mappings":";;;;;;AAAA,SAASA,uBAAT,QAAwC,YAAxC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,iBAAT,QAAkC,YAAlC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,SAAS,EAAE,SADf;AAEIC,IAAAA,aAAa,EAAE,CACX;AACIC,MAAAA,OAAO,EAAE;AADb,KADW;AAFnB;AAQA;;;;;;;;;;;;;;;AATO,GADM;AA0BjBC,EAAAA,OAAO,EAAE,KA1BQ;AA2BjBC,EAAAA,QAAQ,EAAE,CAAC;AA3BM,CAArB;AA8BA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAE5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,gBAAL;AACI,aAAO;AACHG,QAAAA,SAAS,EAAEQ,MAAM,CAACE,OADf;AAEHN,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKR,uBAAL;AACI,UAAIe,OAAO,GAAG,CAAC,GAAGJ,KAAK,CAACP,SAAV,CAAd;AACAW,MAAAA,OAAO,CAACH,MAAM,CAACE,OAAP,CAAeE,KAAhB,CAAP,CAA8BV,aAA9B,GAA8CM,MAAM,CAACE,OAAP,CAAeG,SAAf,IAA4B;AAACC,QAAAA,KAAK,EAAE;AAAR,OAA1E;AACA,aAAO;AACJd,QAAAA,SAAS,EAAE,CAAC,GAAGW,OAAJ,CADP;AAEJP,QAAAA,OAAO,EAAE;AAFL,OAAP;;AAIJ,SAAKN,iBAAL;AACI,+BACOS,KADP;AAEIF,QAAAA,QAAQ,EAAEG,MAAM,CAACE,OAFrB;AAGIN,QAAAA,OAAO,EAAE;AAHb;;AAKJ;AACI,aAAOG,KAAP;AApBR;AAsBH,CAxBM","sourcesContent":["import { SET_IMMUNIZATION_ACTION } from '../actions';\r\nimport { SET_CHILD_ACTION } from '../actions';\r\nimport { SET_PARENT_ACTION } from '../actions';\r\n\r\nconst initialState = {\r\n    childList: [\r\n        {\r\n            firstName: 'Brandon',\r\n            immunizations: [\r\n                {\r\n                    vaccine: 'stuff'\r\n                }\r\n            ]\r\n        }\r\n        /* \r\n            {\r\n                name: [type text]\r\n                age: [type text]\r\n                social: [type text]\r\n                signUpCode: [type text] //do I need to keep this in state?\r\n                immunizations: [\r\n                    {\r\n                        immunizationName: [type text]\r\n                        DateOfVaccination: [type text]\r\n                        hasShot: [type bool]\r\n                    }\r\n                ]\r\n            }\r\n        */\r\n    ],\r\n    display: false,\r\n    parentId: -1\r\n}\r\n\r\nexport const patientReducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case SET_CHILD_ACTION:\r\n            return {\r\n                childList: action.payload,\r\n                display: false\r\n            }\r\n        case SET_IMMUNIZATION_ACTION:\r\n            let tempArr = [...state.childList];\r\n            tempArr[action.payload.index].immunizations = action.payload.immuneObj || {Empty: 0};\r\n            return {\r\n               childList: [...tempArr],\r\n               display: true\r\n            }\r\n        case SET_PARENT_ACTION:\r\n            return {\r\n                ...state,\r\n                parentId: action.payload,\r\n                display: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
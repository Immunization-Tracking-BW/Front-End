{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandon Nichols\\\\Documents\\\\VScodeProjects\\\\BuildWeek-ImmunizationTracker\\\\Front-End\\\\immutrack\\\\src\\\\components\\\\patient\\\\PatientRegister.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/register\";\nimport { Form, Field, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { LoginButton } from \"../../styles/muiStyledButtons\";\nimport { useStyles } from \"../../styles/muiFormStyles\";\n\nconst RegisterForm = ({\n  errors,\n  touched,\n  values\n}) => {\n  const classes = useStyles();\n  return React.createElement(Paper, {\n    className: classes.root,\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.labels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"First Name\")), React.createElement(Field, {\n    className: classes.inputs,\n    type: \"text\",\n    name: \"firstName\",\n    autoComplete: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.labels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Last Name\")), React.createElement(Field, {\n    className: classes.inputs,\n    type: \"text\",\n    name: \"lastName\",\n    autoComplete: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.labels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Email\")), React.createElement(Field, {\n    className: classes.inputs,\n    type: \"text\",\n    name: \"email\",\n    autoComplete: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.labels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Password\")), React.createElement(Field, {\n    className: classes.inputs,\n    type: \"password\",\n    name: \"password\",\n    autoComplete: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.labels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Phone Number\")), React.createElement(Field, {\n    className: classes.inputs,\n    type: \"text\",\n    name: \"phoneNumber\",\n    autoComplete: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(LoginButton, {\n    variant: \"contained\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"sign up\")), React.createElement(Grid, {\n    className: classes.errors,\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, touched.firstName && errors.firstName && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, errors.firstName), touched.lastName && errors.lastName && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, errors.lastName), touched.email && errors.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, errors.email), touched.password && errors.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, errors.password), touched.phoneNumber && errors.phoneNumber && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, errors.phoneNumber))));\n};\n\nconst phoneValidate = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst FormikWrap = withFormik({\n  mapPropsToValues({\n    firstName,\n    lastName,\n    phoneNumber,\n    email,\n    password\n  }) {\n    return {\n      firstName: firstName || \"\",\n      lastName: lastName || \"\",\n      phoneNumber: phoneNumber || \"\",\n      email: email || \"\",\n      password: password || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required(\"Please enter your name\"),\n    lastName: Yup.string().required(\"Please enter your name\"),\n    phoneNumber: Yup.string().required(\"Please enter your phone number\").matches(phoneValidate, \"Phone number is not valid\"),\n    email: Yup.string().required(\"Email is required\").email(\"Email is not valid\"),\n    password: Yup.string().required(\"Password is required\")\n  }),\n\n  handleSubmit(values, {\n    props,\n    resetForm\n  }) {\n    props.register(props, resetForm, values);\n  }\n\n})(RegisterForm);\nconst PatientRegisterForm = connect(null, {\n  register\n})(FormikWrap);\nexport default PatientRegisterForm;","map":{"version":3,"sources":["C:\\Users\\Brandon Nichols\\Documents\\VScodeProjects\\BuildWeek-ImmunizationTracker\\Front-End\\immutrack\\src\\components\\patient\\PatientRegister.js"],"names":["React","connect","register","Form","Field","withFormik","Yup","Grid","Paper","LoginButton","useStyles","RegisterForm","errors","touched","values","classes","root","container","labels","inputs","firstName","lastName","email","password","phoneNumber","phoneValidate","FormikWrap","mapPropsToValues","validationSchema","object","shape","string","required","matches","handleSubmit","props","resetForm","PatientRegisterForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,QAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,SAAT,QAA0B,4BAA1B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAD,KAAiC;AACpD,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,SACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEK,OAAO,CAACC,IAA1B;AAAgC,IAAA,SAAS,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAED,OAAO,CAACE,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,UAAU,EAAC,QAA9C;AAAuD,IAAA,OAAO,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAIE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEH,OAAO,CAACI,MADrB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,YAAY,EAAC,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAVF,EAaE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEH,OAAO,CAACI,MADrB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,YAAY,EAAC,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAmBE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAnBF,EAsBE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEH,OAAO,CAACI,MADrB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,YAAY,EAAC,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,EA4BE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CA5BF,EA+BE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEH,OAAO,CAACI,MADrB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,YAAY,EAAC,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,EAqCE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CArCF,EAwCE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEH,OAAO,CAACI,MADrB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,aAHP;AAIE,IAAA,YAAY,EAAC,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCF,EA8CE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,WAArB;AAAiC,IAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA9CF,CADF,EAmDE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEJ,OAAO,CAACH,MADrB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,UAAU,EAAC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGC,OAAO,CAACO,SAAR,IAAqBR,MAAM,CAACQ,SAA5B,IAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,MAAM,CAACQ,SAAX,CAN5C,EAOGP,OAAO,CAACQ,QAAR,IAAoBT,MAAM,CAACS,QAA3B,IAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,MAAM,CAACS,QAAX,CAP1C,EAQGR,OAAO,CAACS,KAAR,IAAiBV,MAAM,CAACU,KAAxB,IAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,MAAM,CAACU,KAAX,CARpC,EASGT,OAAO,CAACU,QAAR,IAAoBX,MAAM,CAACW,QAA3B,IAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,MAAM,CAACW,QAAX,CAT1C,EAUGV,OAAO,CAACW,WAAR,IAAuBZ,MAAM,CAACY,WAA9B,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,MAAM,CAACY,WAAX,CAXJ,CAnDF,CADF,CADF;AAsED,CAxED;;AA0EA,MAAMC,aAAa,GAAG,yGAAtB;AAEA,MAAMC,UAAU,GAAGrB,UAAU,CAAC;AAC5BsB,EAAAA,gBAAgB,CAAC;AAAEP,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBG,IAAAA,WAAvB;AAAoCF,IAAAA,KAApC;AAA2CC,IAAAA;AAA3C,GAAD,EAAwD;AACtE,WAAO;AACLH,MAAAA,SAAS,EAAEA,SAAS,IAAI,EADnB;AAELC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EAFjB;AAGLG,MAAAA,WAAW,EAAEA,WAAW,IAAI,EAHvB;AAILF,MAAAA,KAAK,EAAEA,KAAK,IAAI,EAJX;AAKLC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI;AALjB,KAAP;AAOD,GAT2B;;AAU5BK,EAAAA,gBAAgB,EAAEtB,GAAG,CAACuB,MAAJ,GAAaC,KAAb,CAAmB;AACnCV,IAAAA,SAAS,EAAEd,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CADwB;AAEnCX,IAAAA,QAAQ,EAAEf,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAFyB;AAGnCR,IAAAA,WAAW,EAAElB,GAAG,CAACyB,MAAJ,GACVC,QADU,CACD,gCADC,EAEVC,OAFU,CAEFR,aAFE,EAEa,2BAFb,CAHsB;AAMnCH,IAAAA,KAAK,EAAEhB,GAAG,CAACyB,MAAJ,GACJC,QADI,CACK,mBADL,EAEJV,KAFI,CAEE,oBAFF,CAN4B;AASnCC,IAAAA,QAAQ,EAAEjB,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AATyB,GAAnB,CAVU;;AAqB5BE,EAAAA,YAAY,CAACpB,MAAD,EAAS;AAAEqB,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAT,EAA+B;AACzCD,IAAAA,KAAK,CAACjC,QAAN,CAAeiC,KAAf,EAAsBC,SAAtB,EAAiCtB,MAAjC;AACD;;AAvB2B,CAAD,CAAV,CAwBhBH,YAxBgB,CAAnB;AA0BA,MAAM0B,mBAAmB,GAAGpC,OAAO,CACjC,IADiC,EAEjC;AAAEC,EAAAA;AAAF,CAFiC,CAAP,CAG1BwB,UAH0B,CAA5B;AAKA,eAAeW,mBAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../../actions/register\";\r\nimport { Form, Field, withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport { LoginButton } from \"../../styles/muiStyledButtons\";\r\nimport { useStyles } from \"../../styles/muiFormStyles\";\r\n\r\nconst RegisterForm = ({ errors, touched, values }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root} elevation={0}>\r\n      <Form className={classes.container}>\r\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n          <div className={classes.labels}>\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n          </div>\r\n          <Field\r\n            className={classes.inputs}\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            autoComplete=\"false\"\r\n          />\r\n          <div className={classes.labels}>\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n          </div>\r\n          <Field\r\n            className={classes.inputs}\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            autoComplete=\"false\"\r\n          />\r\n          <div className={classes.labels}>\r\n            <label htmlFor=\"email\">Email</label>\r\n          </div>\r\n          <Field\r\n            className={classes.inputs}\r\n            type=\"text\"\r\n            name=\"email\"\r\n            autoComplete=\"false\"\r\n          />\r\n          <div className={classes.labels}>\r\n            <label htmlFor=\"password\">Password</label>\r\n          </div>\r\n          <Field\r\n            className={classes.inputs}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"false\"\r\n          />\r\n          <div className={classes.labels}>\r\n            <label htmlFor=\"phone\">Phone Number</label>\r\n          </div>\r\n          <Field\r\n            className={classes.inputs}\r\n            type=\"text\"\r\n            name=\"phoneNumber\"\r\n            autoComplete=\"false\"\r\n          />\r\n          <LoginButton variant=\"contained\" type=\"submit\">\r\n            sign up\r\n          </LoginButton>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.errors}\r\n          container\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n        >\r\n          {touched.firstName && errors.firstName && <p>{errors.firstName}</p>}\r\n          {touched.lastName && errors.lastName && <p>{errors.lastName}</p>}\r\n          {touched.email && errors.email && <p>{errors.email}</p>}\r\n          {touched.password && errors.password && <p>{errors.password}</p>}\r\n          {touched.phoneNumber && errors.phoneNumber && (\r\n            <p>{errors.phoneNumber}</p>\r\n          )}\r\n        </Grid>\r\n      </Form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst phoneValidate = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst FormikWrap = withFormik({\r\n  mapPropsToValues({ firstName, lastName, phoneNumber, email, password }) {\r\n    return {\r\n      firstName: firstName || \"\",\r\n      lastName: lastName || \"\",\r\n      phoneNumber: phoneNumber || \"\",\r\n      email: email || \"\",\r\n      password: password || \"\"\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    firstName: Yup.string().required(\"Please enter your name\"),\r\n    lastName: Yup.string().required(\"Please enter your name\"),\r\n    phoneNumber: Yup.string()\r\n      .required(\"Please enter your phone number\")\r\n      .matches(phoneValidate, \"Phone number is not valid\"),\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email is not valid\"),\r\n    password: Yup.string().required(\"Password is required\")\r\n  }),\r\n  handleSubmit(values, { props, resetForm }) {\r\n    props.register(props, resetForm, values);\r\n  }\r\n})(RegisterForm);\r\n\r\nconst PatientRegisterForm = connect(\r\n  null,\r\n  { register }\r\n)(FormikWrap);\r\n\r\nexport default PatientRegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}
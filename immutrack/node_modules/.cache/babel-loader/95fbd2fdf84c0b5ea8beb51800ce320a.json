{"ast":null,"code":"import axios from 'axios';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nexport const SET_CHILD_ACTION = 'SET_CHILD_ACTION';\nexport const SET_IMMUNIZATION_ACTION = 'SET_IMMUNIZATION_ACTION';\nexport const SET_PARENT_ACTION = 'SET_PARENT_ACTION';\nexport function getParentAction(props, credentials) {\n  let parentId = -1;\n  return function (dispatch) {\n    axiosWithAuth().post(\"/auth/login/\".concat(props.user), credentials).then(res => {\n      // console.log('RES FROM LOGIN: ', res);\n      localStorage.setItem('token', res.data.token);\n      parentId = res.data.user.id;\n      dispatch({\n        type: SET_PARENT_ACTION,\n        payload: parentId\n      });\n    }).catch(err => console.log('ERROR LOGIN: ', err.message));\n  };\n}\nexport const getChildrenAction = parentId => dispatch => {\n  axiosWithAuth().get(\"/parent/\".concat(parentId, \"/children\")).then(res => {\n    dispatch({\n      type: SET_CHILD_ACTION,\n      payload: res.data\n    }); // console.log('SET CHILD');\n  }).catch(err => console.log('ERROR CHILD REQ: ', err.message));\n};\nexport const getImmunizations = (childArr, history) => dispatch => {\n  childArr.patientList.map((child, index) => {\n    axiosWithAuth().get(\"/child/\".concat(child.id, \"/immunization\")).then(res => {\n      dispatch({\n        type: SET_IMMUNIZATION_ACTION,\n        payload: {\n          immuneObj: res.data,\n          index: index\n        }\n      });\n      if (index === 0) setTimeout(() => history.push(\"/patient-home\"), 1000);\n    }).catch(err => console.log('ERROR IMMUNIZATION REQ: ', err.message));\n  });\n};\nexport const addChildAction = child => dispatch => {\n  axiosWithAuth().post(\"/parent/:parentid/children\");\n};","map":{"version":3,"sources":["C:\\Users\\Brandon Nichols\\Documents\\VScodeProjects\\BuildWeek-ImmunizationTracker\\Front-End\\immutrack\\src\\actions\\index.js"],"names":["axios","axiosWithAuth","SET_CHILD_ACTION","SET_IMMUNIZATION_ACTION","SET_PARENT_ACTION","getParentAction","props","credentials","parentId","dispatch","post","user","then","res","localStorage","setItem","data","token","id","type","payload","catch","err","console","log","message","getChildrenAction","get","getImmunizations","childArr","history","patientList","map","child","index","immuneObj","setTimeout","push","addChildAction"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAiCC,WAAjC,EAA6C;AAChD,MAAIC,QAAQ,GAAG,CAAC,CAAhB;AACA,SAAO,UAASC,QAAT,EAAkB;AAErBR,IAAAA,aAAa,GACRS,IADL,uBACyBJ,KAAK,CAACK,IAD/B,GACuCJ,WADvC,EAEKK,IAFL,CAEUC,GAAG,IAAI;AACT;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,KAAvC;AACAT,MAAAA,QAAQ,GAAGK,GAAG,CAACG,IAAJ,CAASL,IAAT,CAAcO,EAAzB;AACAT,MAAAA,QAAQ,CAAC;AAACU,QAAAA,IAAI,EAAEf,iBAAP;AAA0BgB,QAAAA,OAAO,EAAEZ;AAAnC,OAAD,CAAR;AACH,KAPL,EAQKa,KARL,CAQWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAAG,CAACG,OAAjC,CARlB;AASH,GAXD;AAYH;AAED,OAAO,MAAMC,iBAAiB,GAAGlB,QAAQ,IAAIC,QAAQ,IAAI;AAChDR,EAAAA,aAAa,GACT0B,GADJ,mBACmBnB,QADnB,gBAEII,IAFJ,CAESC,GAAG,IAAI;AACTJ,IAAAA,QAAQ,CAAC;AAACU,MAAAA,IAAI,EAAEjB,gBAAP;AAAyBkB,MAAAA,OAAO,EAAEP,GAAG,CAACG;AAAtC,KAAD,CAAR,CADS,CAET;AAEH,GANJ,EAOIK,KAPJ,CAOUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAG,CAACG,OAArC,CAPjB;AAQR,CATM;AAWP,OAAO,MAAMG,gBAAgB,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBrB,QAAQ,IAAI;AAC/DoB,EAAAA,QAAQ,CAACE,WAAT,CAAqBC,GAArB,CAAyB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACvCjC,IAAAA,aAAa,GAAG0B,GAAhB,kBAA8BM,KAAK,CAACf,EAApC,oBACCN,IADD,CACMC,GAAG,IAAI;AACLJ,MAAAA,QAAQ,CAAC;AAACU,QAAAA,IAAI,EAAEhB,uBAAP;AAAgCiB,QAAAA,OAAO,EAAE;AAACe,UAAAA,SAAS,EAAEtB,GAAG,CAACG,IAAhB;AAAsBkB,UAAAA,KAAK,EAAEA;AAA7B;AAAzC,OAAD,CAAR;AACA,UAAGA,KAAK,KAAK,CAAb,EACIE,UAAU,CAAC,MAAMN,OAAO,CAACO,IAAR,iBAAP,EAAsC,IAAtC,CAAV;AACP,KALL,EAMKhB,KANL,CAMWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,GAAG,CAACG,OAA5C,CANlB;AAOH,GARD;AASH,CAVM;AAYP,OAAO,MAAMa,cAAc,GAAGL,KAAK,IAAIxB,QAAQ,IAAI;AAC/CR,EAAAA,aAAa,GACRS,IADL;AAEH,CAHM","sourcesContent":["import axios from 'axios';\r\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\r\n\r\nexport const SET_CHILD_ACTION = 'SET_CHILD_ACTION';\r\nexport const SET_IMMUNIZATION_ACTION = 'SET_IMMUNIZATION_ACTION';\r\nexport const SET_PARENT_ACTION = 'SET_PARENT_ACTION';\r\n\r\nexport function getParentAction (props, credentials){\r\n    let parentId = -1;\r\n    return function(dispatch){\r\n        \r\n        axiosWithAuth()\r\n            .post(`/auth/login/${props.user}`, credentials)\r\n            .then(res => {\r\n                // console.log('RES FROM LOGIN: ', res);\r\n                localStorage.setItem('token', res.data.token);\r\n                parentId = res.data.user.id;\r\n                dispatch({type: SET_PARENT_ACTION, payload: parentId});\r\n            })\r\n            .catch(err => console.log('ERROR LOGIN: ', err.message));\r\n    }\r\n}\r\n\r\nexport const getChildrenAction = parentId => dispatch => {\r\n         axiosWithAuth()\r\n            .get(`/parent/${parentId}/children`)\r\n            .then(res => {\r\n                dispatch({type: SET_CHILD_ACTION, payload: res.data});\r\n                // console.log('SET CHILD');\r\n                \r\n            })\r\n            .catch(err => console.log('ERROR CHILD REQ: ', err.message));\r\n}\r\n\r\nexport const getImmunizations = (childArr, history) => dispatch => {\r\n    childArr.patientList.map((child, index) => {\r\n        axiosWithAuth().get(`/child/${child.id}/immunization`)\r\n        .then(res => {\r\n                dispatch({type: SET_IMMUNIZATION_ACTION, payload: {immuneObj: res.data, index: index}});\r\n                if(index === 0)\r\n                    setTimeout(() => history.push(`/patient-home`), 1000);\r\n            })\r\n            .catch(err => console.log('ERROR IMMUNIZATION REQ: ', err.message));\r\n    })\r\n}\r\n\r\nexport const addChildAction = child => dispatch => {\r\n    axiosWithAuth()\r\n        .post(`/parent/:parentid/children`)\r\n}"]},"metadata":{},"sourceType":"module"}
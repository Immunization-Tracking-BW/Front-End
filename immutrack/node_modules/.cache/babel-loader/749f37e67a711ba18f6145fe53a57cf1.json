{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Brandon Nichols\\\\Documents\\\\VScodeProjects\\\\BuildWeek-ImmunizationTracker\\\\Front-End\\\\immutrack\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\Brandon Nichols\\\\Documents\\\\VScodeProjects\\\\BuildWeek-ImmunizationTracker\\\\Front-End\\\\immutrack\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brandon Nichols\\\\Documents\\\\VScodeProjects\\\\BuildWeek-ImmunizationTracker\\\\Front-End\\\\immutrack\\\\src\\\\components\\\\patient\\\\Permissions.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updateChildAction } from '../../actions';\n\nconst Permissions = props => {\n  const _useState = useState({\n    vaccine: 'Measles',\n    location: 'Unknown',\n    grantPermission: true,\n    immunizationCompleted: false,\n    date: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        permission = _useState2[0],\n        setPermission = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        foundChild = _useState4[0],\n        setFoundChild = _useState4[1];\n\n  const typesofVaccines = [\"Measles\", \"Rotavirus\", \"Smallpox\", \"Chickenpox\", \"Yellow Fever\", \"Heapatitis A\", \"Polio\", \"Rabies\"];\n\n  const handleChange = e => {\n    setPermission(_objectSpread({}, permission, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.childList.forEach(child => {\n      console.log(\"list: \".concat(child.firstName, \" \").concat(child.lastName, \" === input: \").concat(permission.childsName));\n\n      if (\"\".concat(child.firstName, \" \").concat(child.lastName) === permission.childsName) {\n        child.immunizations.forEach(vac => {\n          console.log(\"VaccineList: \".concat(vac.vaccine, \" === input: \").concat(permission.vaccine));\n\n          if (vac.vaccine === permission.vaccine) {\n            props.updateChildAction(vac.id, permission, props);\n          }\n        });\n      }\n    });\n    setFoundChild(false);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"I, \", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"fullName\",\n    value: permission.fullName,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), \", grant,\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"doctorsOffice\",\n    value: permission.doctorsOffice,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), \", Permission to update,\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"childsName\",\n    value: permission.childsName,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, foundChild ? null : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Child Name Not Found\")), \"for the following immunization:\", React.createElement(\"select\", {\n    value: permission.vaccine,\n    onChange: handleChange,\n    name: \"vaccine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, typesofVaccines.map(vac => {\n    return React.createElement(\"option\", {\n      value: vac,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, vac);\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"submit\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    childList: state.patientReducer.childList\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateChildAction\n})(Permissions);","map":{"version":3,"sources":["C:\\Users\\Brandon Nichols\\Documents\\VScodeProjects\\BuildWeek-ImmunizationTracker\\Front-End\\immutrack\\src\\components\\patient\\Permissions.js"],"names":["React","useState","connect","updateChildAction","Permissions","props","vaccine","location","grantPermission","immunizationCompleted","date","permission","setPermission","foundChild","setFoundChild","typesofVaccines","handleChange","e","target","name","value","handleSubmit","preventDefault","childList","forEach","child","console","log","firstName","lastName","childsName","immunizations","vac","id","fullName","doctorsOffice","map","mapStateToProps","state","patientReducer"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,eAAlC;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA,oBACWJ,QAAQ,CAAC;AAACK,IAAAA,OAAO,EAAE,SAAV;AACCC,IAAAA,QAAQ,EAAE,SADX;AAECC,IAAAA,eAAe,EAAE,IAFlB;AAGCC,IAAAA,qBAAqB,EAAE,KAHxB;AAICC,IAAAA,IAAI,EAAE;AAJP,GAAD,CADnB;AAAA;AAAA,QAClBC,UADkB;AAAA,QACNC,aADM;;AAAA,qBAMWX,QAAQ,CAAC,IAAD,CANnB;AAAA;AAAA,QAMlBY,UANkB;AAAA,QAMNC,aANM;;AAQzB,QAAMC,eAAe,GAAG,CACpB,SADoB,EAEpB,WAFoB,EAGpB,UAHoB,EAIpB,YAJoB,EAKpB,cALoB,EAMpB,cANoB,EAOpB,OAPoB,EAQpB,QARoB,CAAxB;;AAWA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBL,IAAAA,aAAa,mBAAKD,UAAL;AAAiB,OAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA3C,OAAb;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACAjB,IAAAA,KAAK,CAACkB,SAAN,CAAgBC,OAAhB,CAAwBC,KAAK,IAAI;AAC7BC,MAAAA,OAAO,CAACC,GAAR,iBAAqBF,KAAK,CAACG,SAA3B,cAAwCH,KAAK,CAACI,QAA9C,yBAAqElB,UAAU,CAACmB,UAAhF;;AACA,UAAG,UAAGL,KAAK,CAACG,SAAT,cAAsBH,KAAK,CAACI,QAA5B,MAA2ClB,UAAU,CAACmB,UAAzD,EAAoE;AAChEL,QAAAA,KAAK,CAACM,aAAN,CAAoBP,OAApB,CAA4BQ,GAAG,IAAI;AAC/BN,UAAAA,OAAO,CAACC,GAAR,wBAA4BK,GAAG,CAAC1B,OAAhC,yBAAsDK,UAAU,CAACL,OAAjE;;AACA,cAAG0B,GAAG,CAAC1B,OAAJ,KAAgBK,UAAU,CAACL,OAA9B,EAAsC;AAClCD,YAAAA,KAAK,CAACF,iBAAN,CAAwB6B,GAAG,CAACC,EAA5B,EAAgCtB,UAAhC,EAA4CN,KAA5C;AACH;AACJ,SALD;AAMH;AACJ,KAVD;AAWAS,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAdD;;AAgBA,SACI;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACO;AAAO,IAAA,IAAI,EAAC,MAAZ;AACC,IAAA,IAAI,EAAC,UADN;AAEC,IAAA,KAAK,EAAEV,UAAU,CAACuB,QAFnB;AAGC,IAAA,QAAQ,EAAElB,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,cAMQ;AAAO,IAAA,IAAI,EAAC,MAAZ;AACI,IAAA,IAAI,EAAC,eADT;AAEI,IAAA,KAAK,EAAEL,UAAU,CAACwB,aAFtB;AAGI,IAAA,QAAQ,EAAEnB,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANR,6BAWQ;AAAO,IAAA,IAAI,EAAC,MAAZ;AACI,IAAA,IAAI,EAAC,YADT;AAEI,IAAA,KAAK,EAAEL,UAAU,CAACmB,UAFtB;AAGI,IAAA,QAAQ,EAAEd,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXR,EAeQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,UAAU,GAAG,IAAH,GAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA3B,CAfR,qCAiBQ;AAAQ,IAAA,KAAK,EAAEF,UAAU,CAACL,OAA1B;AAAmC,IAAA,QAAQ,EAAEU,YAA7C;AAA2D,IAAA,IAAI,EAAC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,eAAe,CAACqB,GAAhB,CAAoBJ,GAAG,IAAI;AACxB,WAAO;AAAQ,MAAA,KAAK,EAAEA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBA,GAArB,CAAP;AACH,GAFA,CADL,CAjBR,EAsBQ;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBR,CADJ;AA0BH,CAjED;;AAmEA,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHf,IAAAA,SAAS,EAAEe,KAAK,CAACC,cAAN,CAAqBhB;AAD7B,GAAP;AAGH,CAJD;;AAMA,eAAerB,OAAO,CAACmC,eAAD,EAAkB;AAAClC,EAAAA;AAAD,CAAlB,CAAP,CAA8CC,WAA9C,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateChildAction } from '../../actions';\r\n\r\nconst Permissions = props => {\r\n    const [permission, setPermission] = useState({vaccine: 'Measles', \r\n                                                  location: 'Unknown',\r\n                                                  grantPermission: true,\r\n                                                  immunizationCompleted: false,\r\n                                                  date: ''})\r\n    const [foundChild, setFoundChild] = useState(true);\r\n\r\n    const typesofVaccines = [\r\n        \"Measles\",\r\n        \"Rotavirus\",\r\n        \"Smallpox\",\r\n        \"Chickenpox\",\r\n        \"Yellow Fever\",\r\n        \"Heapatitis A\",\r\n        \"Polio\",\r\n        \"Rabies\"\r\n      ];\r\n\r\n    const handleChange = e => {\r\n        setPermission({...permission, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.childList.forEach(child => {\r\n            console.log(`list: ${child.firstName} ${child.lastName} === input: ${permission.childsName}`)\r\n            if(`${child.firstName} ${child.lastName}` === permission.childsName){\r\n                child.immunizations.forEach(vac => {\r\n                    console.log(`VaccineList: ${vac.vaccine} === input: ${permission.vaccine}`)\r\n                    if(vac.vaccine === permission.vaccine){\r\n                        props.updateChildAction(vac.id, permission, props);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        setFoundChild(false);\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            I, <input type='text' \r\n                name='fullName' \r\n                value={permission.fullName}\r\n                onChange={handleChange}/>,\r\n            grant, \r\n                <input type='text' \r\n                    name='doctorsOffice' \r\n                    value={permission.doctorsOffice}\r\n                    onChange={handleChange}/>,\r\n            Permission to update, \r\n                <input type='text' \r\n                    name='childsName' \r\n                    value={permission.childsName}\r\n                    onChange={handleChange}/>\r\n                <span>{foundChild ? null : <p>Child Name Not Found</p>}</span>\r\n            for the following immunization:\r\n                <select value={permission.vaccine} onChange={handleChange} name='vaccine'>\r\n                    {typesofVaccines.map(vac => {\r\n                        return <option value={vac}>{vac}</option>\r\n                    })}\r\n                </select>\r\n                <button type='submit'>submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        childList: state.patientReducer.childList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateChildAction})(Permissions);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandon Nichols\\\\Documents\\\\VScodeProjects\\\\BuildWeek-ImmunizationTracker\\\\Front-End\\\\immutrack\\\\src\\\\components\\\\login\\\\Login.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { loginAction } from \"../../actions\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { useStyles } from \"../../styles/muiFormStyles\";\nimport { LoginButton } from \"../../styles/muiStyledButtons\";\n\nconst Login = ({\n  errors,\n  touched,\n  values,\n  history\n}) => {\n  const classes = useStyles();\n  return React.createElement(Paper, {\n    className: classes.root,\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.labels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Email\")), React.createElement(Field, {\n    className: classes.inputs,\n    component: \"input\",\n    type: \"text\",\n    name: \"email\",\n    autoComplete: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.labels,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Password\")), React.createElement(Field, {\n    className: classes.inputs,\n    component: \"input\",\n    type: \"password\",\n    name: \"password\",\n    autoComplete: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(LoginButton, {\n    variant: \"contained\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"sign in\")), React.createElement(Grid, {\n    className: classes.errors,\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, touched.email && errors.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, errors.email), touched.password && errors.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, errors.password))));\n};\n\nconst HOCForm = withFormik({\n  mapPropsToValues({\n    email,\n    password\n  }) {\n    return {\n      email: email || \"\",\n      password: password || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email(\"Please enter a valid email\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\")\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    props\n  }) {\n    // axiosWithAuth()\n    //   .post(`/auth/login/${props.user}`, values)\n    //   .then(res => {\n    //     console.log(res);\n    //      localStorage.setItem(\"token\", res.data.token);\n    //     props.user === \"parents\"\n    //       ? props.history.push(\"/\")\n    //       : props.history.push(\"/login\");\n    //   })\n    //   .catch(err => {\n    //     console.log(err);\n    //     resetForm();\n    //     props.history.push(\"/user\");\n    //   });\n    //console.log('here1');\n    props.loginAction(props, values); //Need to await\n  }\n\n})(Login);\n\nconst mapStateToProps = state => ({\n  user: state.loginReducer.user\n});\n\nconst LoginForm = connect(mapStateToProps, {\n  loginAction\n})(HOCForm);\nexport default LoginForm;","map":{"version":3,"sources":["C:\\Users\\Brandon Nichols\\Documents\\VScodeProjects\\BuildWeek-ImmunizationTracker\\Front-End\\immutrack\\src\\components\\login\\Login.js"],"names":["React","connect","Form","Field","withFormik","Yup","loginAction","Grid","Paper","useStyles","LoginButton","Login","errors","touched","values","history","classes","root","container","labels","inputs","email","password","HOCForm","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","resetForm","props","mapStateToProps","state","user","loginReducer","LoginForm"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Field, withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { loginAction } from \"../../actions\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport { useStyles } from \"../../styles/muiFormStyles\";\r\nimport { LoginButton } from \"../../styles/muiStyledButtons\";\r\n\r\nconst Login = ({ errors, touched, values, history }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={0}>\r\n      <Form className={classes.container}>\r\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n          <div className={classes.labels}>\r\n            <label htmlFor=\"email\">Email</label>\r\n          </div>\r\n          <Field\r\n            className={classes.inputs}\r\n            component=\"input\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            autoComplete=\"false\"\r\n          />\r\n          <div className={classes.labels}>\r\n            <label htmlFor=\"password\">Password</label>\r\n          </div>\r\n          <Field\r\n            className={classes.inputs}\r\n            component=\"input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"false\"\r\n          />\r\n          <LoginButton variant=\"contained\" type=\"submit\">\r\n            sign in\r\n          </LoginButton>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.errors}\r\n          container\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n        >\r\n          {touched.email && errors.email && <p>{errors.email}</p>}\r\n          {touched.password && errors.password && <p>{errors.password}</p>}\r\n        </Grid>\r\n      </Form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst HOCForm = withFormik({\r\n  mapPropsToValues({ email, password }) {\r\n    return {\r\n      email: email || \"\",\r\n      password: password || \"\"\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Please enter a valid email\")\r\n      .required(\"Email is required\"),\r\n    password: Yup.string().required(\"Password is required\")\r\n  }),\r\n     handleSubmit(values, { resetForm, props }) {\r\n    // axiosWithAuth()\r\n    //   .post(`/auth/login/${props.user}`, values)\r\n    //   .then(res => {\r\n    //     console.log(res);\r\n    //      localStorage.setItem(\"token\", res.data.token);\r\n    //     props.user === \"parents\"\r\n    //       ? props.history.push(\"/\")\r\n    //       : props.history.push(\"/login\");\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err);\r\n    //     resetForm();\r\n    //     props.history.push(\"/user\");\r\n    //   });\r\n    //console.log('here1');\r\n    props.loginAction(props, values); //Need to await\r\n  }\r\n})(Login);\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.loginReducer.user\r\n});\r\n\r\nconst LoginForm = connect(\r\n  mapStateToProps,\r\n  { loginAction }\r\n)(HOCForm);\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}
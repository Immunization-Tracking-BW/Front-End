{"ast":null,"code":"import axios from 'axios';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nexport const SET_CHILD_ACTION = 'SET_CHILD_ACTION';\nexport const SET_IMMUNIZATION_ACTION = 'SET_IMMUNIZATION_ACTION';\nexport const SET_PARENT_ACTION = 'SET_PARENT_ACTION';\nexport function getParentAction(props, credentials) {\n  return function (dispatch) {\n    let parentId = -1;\n    axiosWithAuth().post(\"/auth/login/\".concat(props.user), credentials).then(res => {\n      // console.log('RES FROM LOGIN: ', res);\n      localStorage.setItem('token', res.data.token);\n      parentId = res.data.user.id;\n      dispatch({\n        type: SET_PARENT_ACTION,\n        payload: parentId\n      });\n      getChildrenAction(parentId, props)(dispatch);\n    }).catch(err => console.log('ERROR LOGIN: ', err));\n  };\n}\nexport function getImmunizations(childArr, history) {\n  return function (dispatch) {\n    childArr.patientList.map((child, index) => {\n      axiosWithAuth().get(\"/child/\".concat(child.id, \"/immunization\")).then(res => {\n        dispatch({\n          type: SET_IMMUNIZATION_ACTION,\n          payload: {\n            immuneObj: res.data,\n            index: index\n          }\n        });\n        console.log('INDEX: ', index);\n        console.log('CHILD ARRAY LENGTH: ', childArr.length - 1);\n        if (index === childArr.length - 1) setTimeout(() => history.push(\"/patient-home\"), 1000);\n      }).catch(err => console.log('ERROR IMMUNIZATION REQ: ', err));\n    });\n  };\n}\nexport function getChildrenAction(parentId, props) {\n  return function (dispatch) {\n    axiosWithAuth().get(\"/parent/\".concat(parentId, \"/children\")).then(res => {\n      dispatch({\n        type: SET_CHILD_ACTION,\n        payload: res.data\n      }); // console.log('SET CHILD');\n\n      getImmunizations(res.data, props.history)(dispatch);\n    }).catch(err => console.log('ERROR CHILD REQ: ', err));\n  };\n}\nexport const addChildAction = child => dispatch => {\n  axiosWithAuth().post(\"/parent/:parentid/children\");\n};","map":{"version":3,"sources":["C:\\Users\\Brandon Nichols\\Documents\\VScodeProjects\\BuildWeek-ImmunizationTracker\\Front-End\\immutrack\\src\\actions\\index.js"],"names":["axios","axiosWithAuth","SET_CHILD_ACTION","SET_IMMUNIZATION_ACTION","SET_PARENT_ACTION","getParentAction","props","credentials","dispatch","parentId","post","user","then","res","localStorage","setItem","data","token","id","type","payload","getChildrenAction","catch","err","console","log","getImmunizations","childArr","history","patientList","map","child","index","get","immuneObj","length","setTimeout","push","addChildAction"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\r\n\r\nexport const SET_CHILD_ACTION = 'SET_CHILD_ACTION';\r\nexport const SET_IMMUNIZATION_ACTION = 'SET_IMMUNIZATION_ACTION';\r\nexport const SET_PARENT_ACTION = 'SET_PARENT_ACTION';\r\n\r\nexport function getParentAction (props, credentials){\r\n    return function(dispatch){\r\n        let parentId = -1;\r\n        axiosWithAuth()\r\n            .post(`/auth/login/${props.user}`, credentials)\r\n            .then(res => {\r\n                // console.log('RES FROM LOGIN: ', res);\r\n                localStorage.setItem('token', res.data.token);\r\n                parentId = res.data.user.id;\r\n                dispatch({type: SET_PARENT_ACTION, payload: parentId});\r\n                getChildrenAction(parentId, props)(dispatch);\r\n            })\r\n            .catch(err => console.log('ERROR LOGIN: ', err));\r\n    }\r\n}\r\n\r\nexport function getImmunizations(childArr, history) {\r\n    return function(dispatch){\r\n        childArr.patientList.map((child, index) => {\r\n            axiosWithAuth().get(`/child/${child.id}/immunization`)\r\n            .then(res => {\r\n                    dispatch({type: SET_IMMUNIZATION_ACTION, payload: {immuneObj: res.data, index: index}});\r\n                    console.log('INDEX: ', index);\r\n                    console.log('CHILD ARRAY LENGTH: ', childArr.length - 1);\r\n                    if(index === childArr.length - 1)\r\n                        setTimeout(() => history.push(`/patient-home`), 1000);\r\n                })\r\n                .catch(err => console.log('ERROR IMMUNIZATION REQ: ', err));\r\n        })\r\n    }\r\n}\r\n\r\nexport function getChildrenAction(parentId, props){\r\n    return function(dispatch){\r\n        axiosWithAuth()\r\n           .get(`/parent/${parentId}/children`)\r\n           .then(res => {\r\n               dispatch({type: SET_CHILD_ACTION, payload: res.data});\r\n               // console.log('SET CHILD');\r\n               getImmunizations(res.data, props.history)(dispatch);\r\n           })\r\n           .catch(err => console.log('ERROR CHILD REQ: ', err));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addChildAction = child => dispatch => {\r\n    axiosWithAuth()\r\n        .post(`/parent/:parentid/children`)\r\n}"]},"metadata":{},"sourceType":"module"}
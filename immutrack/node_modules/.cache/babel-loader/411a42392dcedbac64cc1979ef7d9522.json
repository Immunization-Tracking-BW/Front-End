{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandon Nichols\\\\Documents\\\\VScodeProjects\\\\BuildWeek-ImmunizationTracker\\\\Front-End\\\\immutrack\\\\src\\\\components\\\\login\\\\Login.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { loginAction } from \"../../actions\";\nimport { makeStyles, withStyles, Container, Button, Grid, Paper } from \"@material-ui/core\";\nimport { theme } from \"../../styles/theme\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    background: \"gray\",\n    // replace with background image\n    fontFamily: theme.typography.fontFamily,\n    fontSize: \"15px\"\n  },\n  separate: {\n    height: \"100vh\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    background: \"#fff\",\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\n      width: \"80%\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"60%\"\n    }\n  },\n  content: {\n    height: \"100vh\",\n    width: \"100%\",\n    padding: theme.spacing(4),\n    background: \"#fff\",\n    [theme.breakpoints.up(\"sm\")]: {\n      height: \"400px\",\n      width: \"375px\",\n      background: \"#C5C5C5\"\n    }\n  },\n  form: {\n    width: \"90%\",\n    margin: \"0 auto\"\n  },\n  spacer: {\n    marginTop: theme.spacing(2)\n  },\n  inputs: {\n    width: \"100%\",\n    margin: \"0 auto\"\n  },\n  errors: {\n    marginTop: theme.spacing(4),\n    color: theme.palette.secondary.dark\n  }\n});\nconst StyledButton = withStyles({\n  root: {\n    height: \"50px\",\n    width: \"175px\",\n    margin: \"0 auto\",\n    marginTop: theme.spacing(4),\n    background: theme.palette.primary.dark,\n    color: theme.palette.primary.contrastText,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: \"15px\",\n    fontWeight: \"500\",\n    \"&:hover\": {\n      background: theme.palette.primary.light\n    }\n  }\n})(Button);\n\nconst Login = ({\n  errors,\n  touched,\n  values\n}) => {\n  const classes = useStyles();\n  return React.createElement(Container, {\n    className: classes.root,\n    maxWidth: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.separate,\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.content,\n    elevation: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Field, {\n    className: classes.inputs,\n    component: \"input\",\n    type: \"text\",\n    name: \"email\",\n    autoComplete: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: classes.spacer,\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Field, {\n    className: classes.inputs,\n    component: \"input\",\n    type: \"password\",\n    name: \"password\",\n    autoComplete: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(StyledButton, {\n    variant: \"contained\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"sign in\"))), React.createElement(Grid, {\n    className: classes.errors,\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, touched.email && errors.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, errors.email), touched.password && errors.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, errors.password)))));\n};\n\nconst HOCForm = withFormik({\n  mapPropsToValues({\n    email,\n    password\n  }) {\n    return {\n      email: email || \"\",\n      password: password || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email(\"Please enter a valid email\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\")\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    props\n  }) {\n    // axiosWithAuth()\n    //   .post(`/auth/login/${props.user}`, values)\n    //   .then(res => {\n    //     console.log(res);\n    //      localStorage.setItem(\"token\", res.data.token);\n    //     props.user === \"parents\"\n    //       ? props.history.push(\"/\")\n    //       : props.history.push(\"/login\");\n    //   })\n    //   .catch(err => {\n    //     console.log(err);\n    //     resetForm();\n    //     props.history.push(\"/user\");\n    //   });\n    props.loginAction(props.user, values); //Need to await\n\n    setTimeout(() => {\n      props.history.push('/patient-home');\n    }, 1000);\n  }\n\n})(Login);\n\nconst mapStateToProps = state => ({\n  user: state.loginReducer.user\n});\n\nconst LoginForm = connect(mapStateToProps, {\n  loginAction\n})(HOCForm);\nexport default LoginForm;","map":{"version":3,"sources":["C:\\Users\\Brandon Nichols\\Documents\\VScodeProjects\\BuildWeek-ImmunizationTracker\\Front-End\\immutrack\\src\\components\\login\\Login.js"],"names":["React","connect","Form","Field","withFormik","Yup","loginAction","makeStyles","withStyles","Container","Button","Grid","Paper","theme","useStyles","root","width","background","fontFamily","typography","fontSize","separate","height","margin","breakpoints","between","up","content","padding","spacing","form","spacer","marginTop","inputs","errors","color","palette","secondary","dark","StyledButton","primary","contrastText","fontWeight","light","Login","touched","values","classes","email","password","HOCForm","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","resetForm","props","user","setTimeout","history","push","mapStateToProps","state","loginReducer","LoginForm"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Field, withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { loginAction } from \"../../actions\";\r\nimport {\r\n  makeStyles,\r\n  withStyles,\r\n  Container,\r\n  Button,\r\n  Grid,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { theme } from \"../../styles/theme\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    background: \"gray\", // replace with background image\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontSize: \"15px\"\r\n  },\r\n  separate: {\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    margin: \"0 auto\",\r\n    background: \"#fff\",\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"60%\"\r\n    }\r\n  },\r\n  content: {\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    padding: theme.spacing(4),\r\n    background: \"#fff\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: \"400px\",\r\n      width: \"375px\",\r\n      background: \"#C5C5C5\"\r\n    }\r\n  },\r\n  form: {\r\n    width: \"90%\",\r\n    margin: \"0 auto\"\r\n  },\r\n  spacer: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  inputs: {\r\n    width: \"100%\",\r\n    margin: \"0 auto\"\r\n  },\r\n  errors: {\r\n    marginTop: theme.spacing(4),\r\n    color: theme.palette.secondary.dark\r\n  }\r\n});\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    height: \"50px\",\r\n    width: \"175px\",\r\n    margin: \"0 auto\",\r\n    marginTop: theme.spacing(4),\r\n    background: theme.palette.primary.dark,\r\n    color: theme.palette.primary.contrastText,\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontSize: \"15px\",\r\n    fontWeight: \"500\",\r\n    \"&:hover\": {\r\n      background: theme.palette.primary.light\r\n    }\r\n  }\r\n})(Button);\r\n\r\nconst Login = ({ errors, touched, values }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      <Grid className={classes.separate} container justify=\"center\">\r\n        <Paper className={classes.content} elevation={4}>\r\n          <Form className={classes.form}>\r\n            <Grid container direction=\"column\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Field\r\n                className={classes.inputs}\r\n                component=\"input\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                autoComplete=\"false\"\r\n              />\r\n              <label className={classes.spacer} htmlFor=\"password\">\r\n                Password\r\n              </label>\r\n              <Field\r\n                className={classes.inputs}\r\n                component=\"input\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                autoComplete=\"false\"\r\n              />\r\n              <StyledButton variant=\"contained\" type=\"submit\">\r\n                sign in\r\n              </StyledButton>\r\n            </Grid>\r\n          </Form>\r\n          <Grid\r\n            className={classes.errors}\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n          >\r\n            {touched.email && errors.email && <p>{errors.email}</p>}\r\n            {touched.password && errors.password && <p>{errors.password}</p>}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst HOCForm = withFormik({\r\n  mapPropsToValues({ email, password }) {\r\n    return {\r\n      email: email || \"\",\r\n      password: password || \"\"\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Please enter a valid email\")\r\n      .required(\"Email is required\"),\r\n    password: Yup.string().required(\"Password is required\")\r\n  }),\r\n   handleSubmit(values, { resetForm, props }) {\r\n    // axiosWithAuth()\r\n    //   .post(`/auth/login/${props.user}`, values)\r\n    //   .then(res => {\r\n    //     console.log(res);\r\n    //      localStorage.setItem(\"token\", res.data.token);\r\n    //     props.user === \"parents\"\r\n    //       ? props.history.push(\"/\")\r\n    //       : props.history.push(\"/login\");\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err);\r\n    //     resetForm();\r\n    //     props.history.push(\"/user\");\r\n    //   });\r\n     props.loginAction(props.user, values); //Need to await\r\n    setTimeout(() => {props.history.push('/patient-home')}, 1000) ;\r\n  }\r\n})(Login);\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.loginReducer.user\r\n});\r\n\r\nconst LoginForm = connect(\r\n  mapStateToProps,\r\n  { loginAction }\r\n)(HOCForm);\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Brandon Nichols\\\\Documents\\\\VScodeProjects\\\\BuildWeek-ImmunizationTracker\\\\Front-End\\\\immutrack\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brandon Nichols\\\\Documents\\\\VScodeProjects\\\\BuildWeek-ImmunizationTracker\\\\Front-End\\\\immutrack\\\\src\\\\components\\\\patient\\\\PatientHome.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport './PatientHome.css';\n\nconst PatientHome = props => {\n  // console.log('PROPS: ', props);\n  //console.log('PROPS IMMUNIZATIONS: ', props.childImunizations);\n  const _useState = useState(-1),\n        _useState2 = _slicedToArray(_useState, 2),\n        active = _useState2[0],\n        setActive = _useState2[1];\n\n  const rowSpacing = {\n    paddingTop: '10px'\n  };\n  const statusContainer = {\n    background: 'white',\n    border: '1px solid #A1A1A1',\n    width: '26px',\n    height: '26px',\n    borderRadius: '50%'\n  };\n  const statusGreen = {\n    background: '#229449',\n    borderRadius: '50%',\n    width: '20px',\n    height: '20px',\n    margin: 'auto',\n    marginTop: '3%'\n  };\n  const statusYellow = {\n    background: '#DBD424',\n    borderRadius: '50%',\n    width: '20px',\n    height: '20px',\n    margin: 'auto',\n    marginTop: '3%'\n  };\n\n  const addChildButton = () => {\n    setTimeout(() => props.history.push('/add-child'), 1000);\n  };\n\n  const displayVacc = index => {\n    setActive(index);\n  };\n\n  const permissionButton = () => {\n    props.history.push('/permissions');\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      background: '#F2F2F2'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: addChildButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Add Child\"), React.createElement(\"button\", {\n    onClick: permissionButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Permissions\"), props.displayPatient && props.patientList.map((patient, index) => {\n    // console.log('PATIENT: ', patient);\n    return React.createElement(\"div\", {\n      key: patient.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      onClick: () => displayVacc(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, patient.firstName, \" \", patient.lastName), React.createElement(\"table\", {\n      key: patient.id,\n      className: active === index ? 'Show-Vaccines' : 'Hide-Vaccines',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Vaccine\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Location\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, patient['immunizations'].map(vac => {\n      let convertDate = new Date(vac.date);\n      return React.createElement(\"tr\", {\n        key: vac.id,\n        style: rowSpacing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: statusContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: vac.immunizationCompleted ? statusGreen : statusYellow,\n        className: \"Space-between-Table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        className: \"Space-between-Table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, vac.vaccine), React.createElement(\"td\", {\n        className: \"Space-between-Table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, convertDate.toDateString()), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, vac.location));\n    }))));\n  }));\n};\n\nconst mapStateToProps = state => {\n  // console.log('STATE: ', state);\n  return {\n    patientList: state.patientReducer.childList,\n    // immunizationList: state.patientReducer.childList.immunizations,\n    displayPatient: state.patientReducer.display,\n    parentId: state.patientReducer.parentId\n  };\n};\n\nexport default connect(mapStateToProps, {})(PatientHome);","map":{"version":3,"sources":["C:\\Users\\Brandon Nichols\\Documents\\VScodeProjects\\BuildWeek-ImmunizationTracker\\Front-End\\immutrack\\src\\components\\patient\\PatientHome.js"],"names":["React","useState","useEffect","connect","PatientHome","props","active","setActive","rowSpacing","paddingTop","statusContainer","background","border","width","height","borderRadius","statusGreen","margin","marginTop","statusYellow","addChildButton","setTimeout","history","push","displayVacc","index","permissionButton","displayPatient","patientList","map","patient","id","firstName","lastName","vac","convertDate","Date","date","immunizationCompleted","vaccine","toDateString","location","mapStateToProps","state","patientReducer","childList","display","parentId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './PatientHome.css';\r\n\r\nconst PatientHome = props => {\r\n    // console.log('PROPS: ', props);\r\n    //console.log('PROPS IMMUNIZATIONS: ', props.childImunizations);\r\n\r\n    const [active, setActive] = useState(-1);\r\n\r\n    const rowSpacing = {\r\n        paddingTop: '10px'\r\n    }\r\n\r\n    const statusContainer = {\r\n        background: 'white',\r\n        border: '1px solid #A1A1A1',\r\n        width: '26px',\r\n        height: '26px',\r\n        borderRadius: '50%'\r\n    }\r\n\r\n    const statusGreen = {\r\n        background: '#229449',\r\n        borderRadius: '50%',\r\n        width: '20px',\r\n        height: '20px',\r\n        margin: 'auto',\r\n        marginTop: '3%'\r\n    }\r\n\r\n    const statusYellow = {\r\n        background: '#DBD424',\r\n        borderRadius: '50%',\r\n        width: '20px',\r\n        height: '20px',\r\n        margin: 'auto',\r\n        marginTop: '3%'\r\n    }\r\n\r\n    const addChildButton = () => {\r\n        setTimeout(() => props.history.push('/add-child'), 1000);\r\n    }\r\n\r\n    const displayVacc = (index) => {\r\n        setActive(index);\r\n    }\r\n\r\n    const permissionButton = () => {\r\n        props.history.push('/permissions');\r\n    }\r\n\r\n    return(\r\n        <div style={{background: '#F2F2F2'}}>\r\n            <button onClick={addChildButton}>Add Child</button>\r\n            <button onClick={permissionButton}>Permissions</button>\r\n            {  \r\n                props.displayPatient && props.patientList.map((patient, index) => {\r\n                \r\n                // console.log('PATIENT: ', patient);\r\n                return (\r\n                    <div key={patient.id}>\r\n                        <h1 onClick={() => displayVacc(index)}>{patient.firstName} {patient.lastName}</h1>\r\n                        <table key={patient.id}\r\n                            className={active === index ? 'Show-Vaccines' : 'Hide-Vaccines'}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Status</th>\r\n                                    <th>Vaccine</th>\r\n                                    <th>Date</th>\r\n                                    <th>Location</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {patient['immunizations'].map(vac => {\r\n                                    let convertDate = new Date(vac.date);\r\n                                    return <tr key={vac.id} style={rowSpacing}>\r\n                                                <td>\r\n                                                    <div style={statusContainer}>\r\n                                                        <div style={vac.immunizationCompleted ? \r\n                                                        statusGreen : \r\n                                                        statusYellow}\r\n                                                        className='Space-between-Table' />\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className='Space-between-Table'>{vac.vaccine}</td>\r\n                                                <td className='Space-between-Table'>{convertDate.toDateString()}</td>\r\n                                                <td>{vac.location}</td>\r\n                                            </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>)\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // console.log('STATE: ', state);\r\n    return {\r\n        patientList: state.patientReducer.childList,\r\n        // immunizationList: state.patientReducer.childList.immunizations,\r\n        displayPatient: state.patientReducer.display,\r\n        parentId: state.patientReducer.parentId\r\n    }\r\n}\r\n\r\nexport default \r\nconnect(mapStateToProps, {})\r\n(PatientHome);"]},"metadata":{},"sourceType":"module"}